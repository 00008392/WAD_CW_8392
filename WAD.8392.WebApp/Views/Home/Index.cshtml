@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center" ng-app ="MusicInstrumentsSpa">
        <div ng-view>

        </div>
    </div>

    @section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.8.2/angular.min.js" type="text/javascript"></script>
    <script src="https://code.angularjs.org/1.8.2/angular-route.min.js" type="text/javascript"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/ngStorage/0.3.11/ngStorage.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        var app = angular.module('MusicInstrumentsSpa', ['ngRoute', 'ngStorage']);

        app.config(function ($routeProvider) {
            $routeProvider
                .when('/', {
                    templateUrl: 'pages/index.html',
                    controller: 'IndexController'
                })
                .when('/Users', {
                    templateUrl: 'pages/users.html',
                    controller: 'UsersController'
                })
                .when('/SignUp', {
                    templateUrl: 'pages/registration.html',
                    controller: 'RegisterController'
                })
                .when('/SignIn', {
                    templateUrl: 'pages/login.html',
                    controller: 'LoginController'
                })
                .when('/SignOut', {
                    templateUrl: 'pages/logout.html',
                    controller: 'LoginController'
                })
                .when('/AddProduct', {
                    templateUrl: 'pages/add_product.html',
                    controller: 'AddProductController'
                })
                .when('/MyProducts', {
                    templateUrl: 'pages/my_products.html',
                    controller: 'MyProductsController'
                })
                .when('/MyAccount', {
                    templateUrl: 'pages/account.html',
                    controller: 'AccountController'
                })
                .otherwise({
                    redirectTo: '/'
                })
        });
        app.service('AuthenticationCheck', function () {
            var service = {};
            service.IsLogged = function (callback) {
                if (sessionStorage.getItem('current_user')) {
                     callback(true);
                } else {
                     callback(false);
                }
            }
            return service;
        });
        app.service('AuthenticationService', ['$http', 'AuthenticationCheck', function ($http, AuthenticationCheck) {
            var service = {};
            service.Login = function (login, callback) {

                AuthenticationCheck.IsLogged(function (result) {
                    if (result) {
                        callback(false);
                    } else {
                        $http.post("@Url.Action("Authenticate", "Authenticate")", login).then(
                            function (response) {
                                 sessionStorage.setItem('token', response.data);
                                 $http.defaults.headers.common.Authorization = 'Bearer ' + response.data;
                                $http.get("@Url.Action("GetLoggedUser", "Users")").then(function (response) {
                                    sessionStorage.setItem('current_user', JSON.stringify(response.data));
                                 })
                                callback(true);
                            },
                            function (error) {
                                callback(false);
                            })
                    }
                })

            }
            service.Logout = function () {
                sessionStorage.clear();
                $http.defaults.headers.common.Authorization = '';
            }
            return service;
        }])

        app.controller('IndexController', ['$scope', '$http', function ($scope, $http) {
            $scope.message = "Welcome to the App. See the most recent products available!";
            $scope.products = [];
             $http.get("@Url.Action("GetProducts", "Products")").then(function (response) {
                $scope.products = response.data;
            })
        }]);
        app.controller('UsersController', ['$scope', '$http', function ($scope, $http) {
            $scope.users = [];
            $http.get("@Url.Action("GetUsers", "Users")").then(function (response) {
                $scope.users = response.data;
                $scope.users.forEach(function (user) {
                    var date = new Date(user.dateOfBirth);
                    var year = date.getFullYear();
                    var month = date.getMonth();
                    var day = date.getDate();
                    user.dateOfBirth = `${day}/${month + 1}/${year}`;
                })
            })
        }]);
        app.controller('RegisterController', ['$scope', '$http', '$location', 'AuthenticationService', 'AuthenticationCheck', function ($scope, $http, $location, AuthenticationService, AuthenticationCheck) {
            $scope.user = {
                id: 0,
                firstName: '',
                lastName: '',
                phoneNumber: null,
                dateOfBirth: null,
                email: null,
                userName: '',
                password: ''
            }
            $scope.message = "";
            $scope.Register = function () {
                AuthenticationCheck.IsLogged(function (result) {
                    if (result) {
                        $scope.message = "You are already registered";
                    } else {
                                       $http.post("@Url.Action("PostUser", "Users")", $scope.user).then(function (response) {
                    $scope.login = {
                        userName: $scope.user.userName,
                        password: $scope.user.password
                    }
                    AuthenticationService.Login($scope.login, function (result) {
                        if (result) {
                            $location.path('/Products');
                        } else {
                            $scope.message = "Something went wrong";
                        }
                    })
                }, function (error) {
                        $scope.message = error.data;
                });
                    }
                })

            }

        }])
        app.controller('LoginController', ['$scope', '$location', 'AuthenticationService', function ($scope, $location, AuthenticationService) {
            $scope.login = {
                userName: $scope.userName,
                password: $scope.password
            }
            $scope.message = "";
            $scope.SignIn = function () {
                AuthenticationService.Login($scope.login, function (result) {
                    if (result) {
                        $location.path('/Users');
                    } else {
                        $scope.message = "Login failed";
                    }
                })
            }
            $scope.SignOut = function () {
                AuthenticationService.Logout();
                $location.path('/');
            }
        }]);
        app.controller('AddProductController', ['$http', '$scope', '$location', 'AuthenticationCheck', function ($http, $scope, $location, AuthenticationCheck) {
            $scope.message = "";
            $scope.PermitSavingProduct;
            $scope.manufacturers = [];
            $scope.productSubcategories = [];
            $scope.conditions = [
                {
                    condValue: 0,
                    condName: 'New'
                },
                {
                    condValue: 1,
                    condName: 'Medium'
                },
                {
                    condValue: 2,
                    condName: 'Old'
                }
            ]
            $scope.statuses = [
                {
                    statusValue: 0,
                    statusName: 'Available'
                },
                {
                    statusValue: 1,
                    statusName: 'Booked'
                },
                {
                    statusValue: 2,
                    statusName: 'Sold'
                }
            ]

            $http.get("@Url.Action("GetManufacturers","Manufacturers")").then(function (response) {
                $scope.manufacturers = response.data;

            })
             $http.get("@Url.Action("GetProductSubcategories", "ProductSubcategories")").then(function (response) {
                 $scope.productSubcategories = response.data;
             })

            AuthenticationCheck.IsLogged(function (result) {
                if (!result) {
                    $scope.message = "To add a product you should sign in first";
                    $scope.PermitSavingProduct = true;
                }
            })

            $scope.onChange = function (item, context) {
                $scope.product[context] = item
            }
            $scope.product = null;
            $scope.Save = function () {
                $http.post("@Url.Action("PostProduct", "Products")", $scope.product).then(function (response) {
                    $location.path('/MyProducts');
                }, function (error) {
                        $scope.message = error.data;
                })
            }
        }])
        app.controller('MyProductsController', ['$scope', '$http', 'AuthenticationCheck', function ($scope, $http, AuthenticationCheck) {
            $scope.message = "";
            $scope.products = [];
            AuthenticationCheck.IsLogged(function (result) {
                if (result) {
                    $scope.CurrentUser = JSON.parse(sessionStorage.getItem('current_user'));
                    $http.get(`@Url.Action("GetProducts", "Products")?user=${$scope.CurrentUser.userId}`).then(function (response) {
                         $scope.products = response.data;
                    })
                } else {
                    $scope.message = "Login to see your products";
                }
            })
        }])
        app.controller('AccountController', ['$scope', '$http', '$location', 'AuthenticationCheck', function ($scope, $http, $location, AuthenticationCheck) {
            $scope.message = "";
            $scope.user = null;
            AuthenticationCheck.IsLogged(function (result) {
                if (result) {
                    $scope.user = JSON.parse(sessionStorage.getItem('current_user'));
                } else {
                    $scope.message = "Login to see your account details";
                }
            })


        }])

    </script>
    }
