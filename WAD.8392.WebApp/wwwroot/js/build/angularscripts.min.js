var app=angular.module("MusicInstrumentsSpa",["ngRoute","ngStorage"]);app.config(["$routeProvider",function(n){n.when("/",{templateUrl:"pages/index.html",controller:"ProductListController"}).when("/Users",{templateUrl:"pages/users.html",controller:"UsersController"}).when("/SignUp",{templateUrl:"pages/save_user.html",controller:"RegisterController"}).when("/SignIn",{templateUrl:"pages/login.html",controller:"LoginController"}).when("/AddProduct",{templateUrl:"pages/save_product.html",controller:"AddProductController"}).when("/EditProduct/:ProductId",{templateUrl:"pages/save_product.html",controller:"EditProductController"}).when("/MyProducts",{templateUrl:"pages/my_products.html",controller:"MyProductsController"}).when("/MyAccount",{templateUrl:"pages/account.html",controller:"AccountController"}).when("/EditAccount",{templateUrl:"pages/save_user.html",controller:"EditAccountController"}).when("/UserDetails/:UserId",{templateUrl:"pages/user_details.html",controller:"UserDetailsController"}).when("/ProductDetails/:ProductId",{templateUrl:"pages/product_details.html",controller:"ProductDetailsController"}).when("/About",{templateUrl:"pages/about.html"}).otherwise({redirectTo:"/"})}]);app.service("AuthenticationService",["$http",function(n){var t={};return t.IsLogged=function(i){t.GetCurrentUser()?(n.defaults.headers.common.Authorization||(n.defaults.headers.common.Authorization="Bearer "+sessionStorage.getItem("token")),i(!0)):i(!1)},t.Login=function(i,r){t.IsLogged(function(u){u?r(!1):n.post("api/authentication",i).then(function(i){sessionStorage.setItem("token",i.data);n.defaults.headers.common.Authorization="Bearer "+i.data;n.get("api/users/account").then(function(n){t.SetCurrentUser(n.data);r(!0)})},function(){r(!1)})})},t.Logout=function(){sessionStorage.clear();n.defaults.headers.common.Authorization=""},t.GetCurrentUser=function(){return JSON.parse(sessionStorage.getItem("current_user"))},t.SetCurrentUser=function(n){sessionStorage.setItem("current_user",JSON.stringify(n))},t}]);app.factory("DateConversion",function(){return{ConvertDate:function(n){var n=new Date(n),t=n.getFullYear(),i=n.getMonth(),r=n.getDate();return`${r}/${i+1}/${t}`}}});app.factory("FacadeService",["AuthenticationService","DateConversion","ProductFactory","SelectInputHandling",function(n,t,i,r){return{IsLogged:n.IsLogged,Login:n.Login,Logout:n.Logout,GetCurrentUser:n.GetCurrentUser,SetCurrentUser:n.SetCurrentUser,ConvertDate:t.ConvertDate,PrepareProductInfo:i.PrepareProductInfo,OnSelectChange:r.OnSelectChange}}]);app.factory("ProductFactory",["$http","$q",function(n,t){return{PrepareProductInfo:function(){var i=[n.get("api/Manufacturers"),n.get("api/Subcategories"),n.get("api/Enums/Conditions"),n.get("api/Enums/Statuses")];return t.all(i).then(function(n){return productInfo={manufacturers:n[0].data,subcategories:n[1].data,conditions:n[2].data,statuses:n[3].data}})}}}]);app.factory("SelectInputHandling",function(){return{OnSelectChange:function(n,t,i){i[t]=n}}});app.controller("AccountController",["$scope","$http","$location","FacadeService",function(n,t,i,r){n.message="";n.user={};n.IsLogged=!1;r.IsLogged(function(t){t?(n.user=r.GetCurrentUser(),n.user.dateOfBirth=r.ConvertDate(n.user.dateOfBirth),n.IsLogged=!0):n.message="Sign in to see your account details"})}]);app.controller("AddProductController",["$http","$scope","$location","FacadeService",function(n,t,i,r){t.message="";t.IsLogged=!1;t.editMode=!1;t.productInfo={};r.PrepareProductInfo().then(function(n){t.productInfo=n});t.product={};r.IsLogged(function(n){n&&(t.IsLogged=!0)});t.onChange=r.OnSelectChange;t.Save=function(){n.post("api/products",t.product).then(function(){i.path("/MyProducts")},function(n){t.isObject=angular.isObject(n.data);t.message=n.data})}}]);app.controller("DeleteAccountController",["$http","$scope","FacadeService",function(n,t,i){t.Delete=function(){n.delete(`api/users/account`).then(function(){i.Logout();t.$parent.user=null;t.$parent.message="Account is deleted";t.$parent.IsLogged=!1})}}]);app.controller("DeleteProductController",["$scope","$http",function(n,t){n.Delete=function(i){t.delete(`api/products/${i.productId}`).then(function(){var t=n.$parent.products.indexOf(i);n.$parent.products.splice(t,1)})}}]);app.controller("EditAccountController",["$scope","$http","$location","FacadeService",function(n,t,i,r){n.user={};n.DisplayForm=!1;n.message="";n.info="";n.mode="Modify";r.IsLogged(function(t){t?(n.user=r.GetCurrentUser(),n.user.dateOfBirth=new Date(n.user.dateOfBirth),n.DisplayForm=!0):n.info="To edit account you should sign in first"});n.Save=function(){t.put(`api/users/account`,n.user).then(function(){r.SetCurrentUser(n.user);i.path("/MyAccount")},function(t){n.message=t.data;n.isObject=angular.isObject(t.data)})}}]);app.controller("EditProductController",["$scope","$http","$routeParams","$location","$q","FacadeService",function(n,t,i,r,u,f){n.product={};n.message="";n.IsLogged=!1;n.editMode=!0;n.productInfo={};f.IsLogged(function(r){r&&u.all([f.PrepareProductInfo(),t.get(`api/products/${i.ProductId}`)]).then(function(t){n.productInfo=t[0];n.product=t[1].data;n.product.userId==f.GetCurrentUser().userId&&(n.IsLogged=!0);n.selectedCondition=n.productInfo.conditions.find(t=>t.condName==n.product.condition);n.selectedStatus=n.productInfo.statuses.find(t=>t.statusName==n.product.status);n.manufacturerSelected=n.productInfo.manufacturers.find(t=>t.manufacturerId==n.product.manufacturerId);n.categorySelected=n.productInfo.subcategories.find(t=>t.productSubcategoryId==n.product.productSubcategoryId)})});n.onChange=f.OnSelectChange;n.Save=function(){t.put(`api/products/${i.ProductId}`,n.product).then(function(){r.path("/MyProducts")},function(t){n.message=t.data;n.isObject=angular.isObject(t.data)})}}]);app.controller("LoginController",["$scope","$location","FacadeService",function(n,t,i){n.login={userName:null,password:null};n.message="";n.IsLogged=!1;i.IsLogged(function(t){t&&(n.IsLogged=!0)});n.SignIn=function(){i.Login(n.login,function(i){i?t.path("/MyAccount"):n.message="Login failed"})}}]);app.controller("MyProductsController",["$scope","$http","FacadeService",function(n,t,i){n.message="";n.products=[];n.IsLogged=!1;i.IsLogged(function(r){r?(n.IsLogged=!0,n.CurrentUser=i.GetCurrentUser(),t.get(`api/products?user=${n.CurrentUser.userId}`).then(function(t){n.products=t.data;n.products.forEach(n=>{n.datePublished=i.ConvertDate(n.datePublished)})})):n.message="Sign in to see your products"})}]);app.controller("ProductDetailsController",["$scope","$http","$routeParams","FacadeService",function(n,t,i,r){n.product=null;n.message="";t.get(`api/products/${i.ProductId}`).then(function(t){n.product=t.data;n.product.datePublished=r.ConvertDate(n.product.datePublished)},function(t){n.message=t.data})}]);app.controller("ProductListController",["$scope","$http","$q","FacadeService",function(n,t,i,r){n.data={manufacturers:[],products:[],subcategories:[],categories:[]};n.filterParams={manufacturer:null,subcategory:null,category:null};t.get(`api/manufacturers`).then(function(t){n.data.manufacturers=t.data});t.get(`api/categories`).then(function(t){n.data.categories=t.data});n.GetSubcategories=function(){t.get(`api/subcategories?${n.filterParams.category==null?"":`&category=${n.filterParams.category}`}`).then(function(t){n.data.subcategories=t.data})};n.BuildQueryString=function(){var t="status=0&";return t+=n.filterParams.manufacturer==null?"":`manufacturer=${n.filterParams.manufacturer}&`,t+=n.filterParams.category==null?"":`category=${n.filterParams.category}&`,t+(n.filterParams.subcategory==null?"":`subcategory=${n.filterParams.subcategory}&`)};n.GetProducts=function(){var i=n.BuildQueryString();t.get(`api/products?${i}`).then(function(t){n.data.products=t.data;n.data.products.forEach(function(n){n.datePublished=r.ConvertDate(n.datePublished)})})};n.GetData=function(){n.GetSubcategories();n.GetProducts()};n.GetData();n.GetDataFromCategory=function(){n.filterParams.subcategory=null;n.GetData()};n.Clear=function(){n.filterParams={manufacturer:null,subcategory:null,category:null};n.GetData()}}]);app.controller("RegisterController",["$scope","$http","$location","FacadeService",function(n,t,i,r){n.user={};n.mode="Register";n.DisplayForm=!0;n.info="";n.message="";r.IsLogged(function(t){t&&(n.info="You are already registered",n.DisplayForm=!1)});n.Save=function(){t.post("api/users",n.user).then(function(){n.login={userName:n.user.userName,password:n.user.password};r.Login(n.login,function(t){t?i.path("/MyAccount"):n.message="Something went wrong"})},function(t){n.message=t.data;n.isObject=angular.isObject(t.data)})}}]);app.controller("SignOutController",["$scope","$location","FacadeService",function(n,t,i){n.SignOut=function(){i.Logout();t.path("/")}}]);app.controller("UserDetailsController",["$scope","$http","$routeParams","FacadeService",function(n,t,i,r){n.user=null;n.products=[];n.message="";t.get(`api/users/${i.UserId}`).then(function(i){n.user=i.data;n.user.dateOfBirth=r.ConvertDate(n.user.dateOfBirth);t.get(`api/products?user=${n.user.userId}`).then(function(t){n.products=t.data;n.products.forEach(n=>{n.datePublished=r.ConvertDate(n.datePublished)})})},function(t){n.message=t.data})}]);app.controller("UsersController",["$scope","$http","FacadeService",function(n,t,i){n.users=[];t.get("api/users").then(function(t){n.users=t.data;n.users.forEach(function(n){n.dateOfBirth=i.ConvertDate(n.dateOfBirth)})})}]);